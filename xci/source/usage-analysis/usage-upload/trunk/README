###############################################################################
#
# usage-upload deployment instructions
#
###############################################################################
#
# Pre-requisites
#
 a) Any Python 2.7 or 3.x plus Python virtualenv
    On CentOS/RedHat 7.x install RPMs:
      python-2.7.5 and python-virtualenv
        OR
      python34-3.4.9 and python34-virtualenv

    Use the path to this Python to configuring the Makefile below

 b) Usage files containing log entries or pre-parsed XSEDE standard usage records,
    which are rotated and have names that include a date "YYYYMMDD", for example:
       messages-20181201.log

###############################################################################
#
# Installing usage-upload
# These instructions use a default install PREFIX=/usr/local/usage-upload
# If you choose an alternate PREFIX, adjust these instructions accordingly
#

1) Always define the install directory PREFIX before executing these instructions
     If using sh/bash
  $ export PREFIX=/usr/local/usage-upload
     if using csh/tcsh
  $ setenv PREFIX /usr/local/usage-upload

  $ mkdir $PREFIX
   
#
2) Install
  $ mkdir $PREFIX/downloads/
  $ cd $PREFIX/downloads/

  ## Browse https://software.xsede.org/development/usage-analysis/
  ##   and note the most recent VERSION and RELEASE of this software
  ## For example for usage-upload-1.4-1.README and usage-upload-1.4-1.tgz
  ##   have VERSION=1.4 and RELEASE=1

  $ wget https://software.xsede.org/development/usage-analysis/usage-upload-<VERSION>-<RELEASE>.tgz
  $ tar -xzf usage-upload-<VERSION>-<RELEASE>.tgz
  $ cd usage-upload-<VERSION>-<RELEASE>/

  # Edit the Makefile to set the following variables 
    Set PREFIX to the value you used in step 1) above
      For example PREFIX=/usr/local/usage-upload
    Set PYTHON_PREFIX to the base directory of the Python with virtualenv
      Usually the parent directory where bin/python is found
      For example given /usr/bin/python set PYTHON_PREFIX=/usr
    Set PYTHON_LIB to the library sub-directory of your Python 
      This is usually the lib/ sub-directory of PYTHON_PREFIX

  $ make install

3) Generate an SSH key pay without a passpharse to be used to upload files
  $ ssh-keygen -t rsa -f $PREFIX/etc/id_rsa

###############################################################################
#
# The usage-upload software can be used to upload usage for multiple applications.
# The following steps can be repeated for each application using different values
#   of <MYAPP>
# Make use the PREFIX to the usage-upload software is defined as shows in 1) above
# Use the same ssh key pair to upload usage for all applications on a given server
#   

4) Request access to upload usage files to the Usage Collection Service (xci-usage.xsede.org)

   # E-mail help@xsede.org with the "Subject: XCI usage upload access" and this information:
   a. Attach the generated public key file id_rsa.pub, or include the contents of the file in the e-mail
   b. Include the name of the application <MYAPP> (i.e. cilogin, ssohub, ...) the usage data is from
   c. Include the hostname(s) you will be uploading usage data from

  # Usage Collection Service administrators will reply with instructions that include:
   d. The ssh target account to upload usage files to
   e. The subdirectory to oupload usage files to

5) Initialize an application upload process
  # First go to the downloaded source directory
  $ cd $PREFIX/download/usage-upload-<VERSION>-<RELEASE>/
  $ make APP=<MYAPP> uploadapp

6) Edit the $PREFIX/etc/upload_<MYAPP>.conf to set the following variables
   LOCAL_DIRECTORY -> where the usage files are located
   LOCAL_GLOB -> the shell glob of which rotated usage files need to be uploaded
   REMOTE_USERNAME -> the ssh target account you received in step 4) above
   REMOTE_PATH -> the subdirectory you received in step 4) above
       Usually "<MYAPP>/", for example "ssohob/"
   Optionally LOG_PARSER if you have a parser that produces stardard usage records

7) Test the new custom upload appplication
  $ $PREFIX/bin/upload_<MYAPP>.cron

8) Define the cron entry to run the upload automatically
  # Use appropriate values of <PREFIX> and <MYAPP>
  CRON: 10 6 * * 0 <PREFIX>/bin/upload_<MYAPP>.cron

###############################################################################
#
# Detailed usage-upload execution flow description
#
# This is background material and not part of the installation instructions.
#
  1. Processing started by cron or  interactive execution of
     bin/upload_<MYAPP>.cron
  2. Which executes bin/upload_usage.py with the the configuration file
     etc/upload_<MYAPP>.conf
  3. Which scans the selected LOCAL_DIRECTORY for files matching LOCAL_GLOB
  4. Selects files that haven't been uploaded or that changed since uploaded
  5. Parses/converts each file IF a parser was configured
  6. Uploads each file or parsed/converted file to the xci-usage server
     and REMOTE_USERNAME account and REMOTE_PATH subdirectory
  7. Tracks uploaded file status so that only new/changed files are uploaded in each run
     $PREFIX/etc/upload_<MYAPP>_status.json
