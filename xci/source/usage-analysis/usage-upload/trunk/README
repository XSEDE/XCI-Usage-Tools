###############################################################################
#
# usage-upload installation and execution instructions
#
###############################################################################
#
# Installing usage-upload:
#
Pre-requiesites are:
  - A Python with virtualenv
    To check execute:
       $ python
       ....
       >>> import virtualenv

  - Usage files containing log entries or pre-parsed XSEDE standard usage records
  - Usage Files that are rotated ith file names that include a date "YYYYMMDD"
    For example:
       messages-20181201.log

1) Install to the default /usr/local/usage-upload or an alterate path
  $ mkdir /usr/local/usage-upload/
  $ mkdir /usr/local/usage-upload/downloads/
  $ cd /usr/local/usage-upload/downloads/
  # Download the desired production or development package from:
  $ wget https://software.xsede.org/{production,development}/ \
                usage-analysis/usage-upload-<ver>-<rel>.tgz
  $ tar -xzf usage-upload-<ver>-<rel>.tgz
  $ cd usage-upload-<ver>-<rel>/
  # Update the Makefile CUSTOMIZE variables
  #   a.  Set PREFIX to the usage-upload directory: PREFIX= /usr/local/usage-upload
  #   b.  Set PYTHON_PREFIX and PYTHON_LIB to point to the Python with virtualenv

  $ vi Makefile
  $ make install

2) Generate SSH keys without a passpharse that this server will use to upload
  $ ssh-keygen -t rsa -f /usr/local/usage-upload/etc/id_rsa

3) Request access to upload usage to xci-usage.xsede.org by e-mailing
     the Usage Collection Service (xci-usage.xsede.org) administrators
     at help@xsede.org with the Subject: XCI usage upload access
     and supply this informaiton:
  a. The generated id_rsa.pub public key
  b. The application name (cilogin, ssohub, etc.) you are uploading usage for
  c. The host(s) you will be uploading from

  # Administrators will reply with instructions that include:
  - The ssh account you can use to upload files
  - The subdirectory on the upload server to copy files to

###############################################################################
#
# Each installation of the usage-upload software can be used to upload usage for
#   multiple applications. Repeat the following steps once for each application
#   upload process. Use a different <myapp> value for each application.
#   

3) Initialize an application upload process
  $ make APP=<myapp> uploadapp

4) Configure the upload by reviewing and updating LOCAL_DIRECTORY, LOCAL_GLOB,
      REMOTE_USERNAME, REMOTE_PATH, and optionally LOG_PARSER if you have a parser
      to produce stardard usage records
  $ vi /usr/local/usage-upload/etc/upload_<myapp>.conf

5) Test the new custom upload appplication
  $ /usr/local/usage-upload/bin/upload_<myapp>.cron

6) Run automatically in cron
  CRON: 10 6 * * 0 /usr/local/usage-upload/bin/upload_<myapp>.cron

Examples of <myapp> are:
  cilogon-usage
  ssohub-usage

###############################################################################
#
# Detailed usage-upload execution flow description
#
# This is background material and not part of the installation instructions.
#
  1. Processing started by a cron or the interactive execution of
     bin/upload_<myapp>.cron
  2. Which executes bin/upload_usage.py with a custom configuration file
     etc/upload_<myapp>.conf
  3. Which scans a selected directory for files matching a configured glob
  4. Selects files that haven't been uploaded or that changed since uploaded
  5. Parses/converts each file IF a parser was configured
  6. Uploads each file or parsed/converted file to a configured target
  7. Tracks previously uploaded files in a status file to not reprocess them
     /usr/local/usage-upload/etc/upload_<myapp>_status.json
